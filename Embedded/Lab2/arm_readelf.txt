ELF 头：
  Magic：   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 
  类别:                              ELF32
  数据:                              2 补码，小端序 (little endian)
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI 版本:                          0
  类型:                              EXEC (可执行文件)
  系统架构:                          ARM
  版本:                              0x1
  入口点地址：               0x8414
  程序头起点：          52 (bytes into file)
  Start of section headers:          3468 (bytes into file)
  标志：             0x5000002, Version5 EABI, <unknown>
  Size of this header:               52 (bytes)
  Size of program headers:           32 (bytes)
  Number of program headers:         8
  Size of section headers:           40 (bytes)
  Number of section headers:         31
  Section header string table index: 28

节头：
  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al
  [ 0]                   NULL            00000000 000000 000000 00      0   0  0
  [ 1] .interp           PROGBITS        00008134 000134 000013 00   A  0   0  1
  [ 2] .note.ABI-tag     NOTE            00008148 000148 000020 00   A  0   0  4
  [ 3] .hash             HASH            00008168 000168 000040 04   A  4   0  4
  [ 4] .dynsym           DYNSYM          000081a8 0001a8 0000b0 10   A  5   1  4
  [ 5] .dynstr           STRTAB          00008258 000258 0000af 00   A  0   0  1
  [ 6] .gnu.version      VERSYM          00008308 000308 000016 02   A  4   0  2
  [ 7] .gnu.version_r    VERNEED         00008320 000320 000040 00   A  5   2  4
  [ 8] .rel.dyn          REL             00008360 000360 000008 08   A  4   0  4
  [ 9] .rel.plt          REL             00008368 000368 000038 08   A  4  11  4
  [10] .init             PROGBITS        000083a0 0003a0 00000c 00  AX  0   0  4
  [11] .plt              PROGBITS        000083ac 0003ac 000068 04  AX  0   0  4
  [12] .text             PROGBITS        00008414 000414 0005d4 00  AX  0   0  4
  [13] .fini             PROGBITS        000089e8 0009e8 000008 00  AX  0   0  4
  [14] .rodata           PROGBITS        000089f0 0009f0 000014 00   A  0   0  4
  [15] .ARM.extab        PROGBITS        00008a04 000a04 000024 00   A  0   0  4
  [16] .ARM.exidx        ARM_EXIDX       00008a28 000a28 000068 00  AL 12   0  4
  [17] .eh_frame         PROGBITS        00008a90 000a90 000004 00   A  0   0  4
  [18] .init_array       INIT_ARRAY      00010a94 000a94 000004 00  WA  0   0  4
  [19] .fini_array       FINI_ARRAY      00010a98 000a98 000004 00  WA  0   0  4
  [20] .jcr              PROGBITS        00010a9c 000a9c 000004 00  WA  0   0  4
  [21] .dynamic          DYNAMIC         00010aa0 000aa0 0000f0 08  WA  5   0  4
  [22] .got              PROGBITS        00010b90 000b90 00002c 04  WA  0   0  4
  [23] .data             PROGBITS        00010bbc 000bbc 000008 00  WA  0   0  4
  [24] .bss              NOBITS          00010bc4 000bc4 00002c 00  WA  0   0  4
  [25] .ARM.attributes   ARM_ATTRIBUTES  00000000 000bc4 00002d 00      0   0  1
  [26] .comment          PROGBITS        00000000 000bf1 00002b 00      0   0  1
  [27] .debug_frame      PROGBITS        00000000 000c1c 000064 00      0   0  4
  [28] .shstrtab         STRTAB          00000000 000c80 00010b 00      0   0  1
  [29] .symtab           SYMTAB          00000000 001264 000800 10     30  91  4
  [30] .strtab           STRTAB          00000000 001a64 00032d 00      0   0  1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  D (mbind), y (purecode), p (processor specific)

程序头：
  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align
  EXIDX          0x000a28 0x00008a28 0x00008a28 0x00068 0x00068 R   0x4
  PHDR           0x000034 0x00008034 0x00008034 0x00100 0x00100 R E 0x4
  INTERP         0x000134 0x00008134 0x00008134 0x00013 0x00013 R   0x1
      [Requesting program interpreter: /lib/ld-linux.so.3]
  LOAD           0x000000 0x00008000 0x00008000 0x00a94 0x00a94 R E 0x8000
  LOAD           0x000a94 0x00010a94 0x00010a94 0x00130 0x0015c RW  0x8000
  DYNAMIC        0x000aa0 0x00010aa0 0x00010aa0 0x000f0 0x000f0 RW  0x4
  NOTE           0x000148 0x00008148 0x00008148 0x00020 0x00020 R   0x4
  GNU_STACK      0x000000 0x00000000 0x00000000 0x00000 0x00000 RW  0x4

 Section to Segment mapping:
  段节...
   00     .ARM.exidx 
   01     
   02     .interp 
   03     .interp .note.ABI-tag .hash .dynsym .dynstr .gnu.version .gnu.version_r .rel.dyn .rel.plt .init .plt .text .fini .rodata .ARM.extab .ARM.exidx .eh_frame 
   04     .init_array .fini_array .jcr .dynamic .got .data .bss 
   05     .dynamic 
   06     .note.ABI-tag 
   07   